strategy("BB & RSI", overlay=true)

bb_length = input.int(20, title="Bollinger Bands Length")
bb_mult = input.float(2.0, title="Bollinger Bands Multiplier")

rsi_length = input.int(14, title="RSI Length")
rsi_ma_length = input.int(14, title="RSI MA Length")

basis = ta.sma(close, bb_length)
dev = ta.stdev(close, bb_length)
upper_band = basis + bb_mult * dev
lower_band = basis - bb_mult * dev

bb_width = upper_band - lower_band

equity = strategy.equity

rsi_value = ta.rsi(close, rsi_length)
rsi_ma = ta.sma(rsi_value, rsi_ma_length)
previous_rsi_ma = request.security(syminfo.tickerid, "1D", rsi_ma[1])
rsi_ma_slope = (rsi_ma - rsi_ma[1]) / rsi_ma_length
rsi_value_slope = (rsi_value - rsi_value[1]) / rsi_length
previous_rsi_ma_slope = request.security(syminfo.tickerid, "1D", rsi_ma_slope[1])
stop_loss_price = strategy.position_avg_price * 0.70
stop_loss_condition = close < stop_loss_price

// Long and Short Conditions
long_condition = ((rsi_ma < rsi_value) and rsi_value < 70 ) or rsi_value <= 30 
exit_condition1 = (rsi_value > 70 and rsi_value > rsi_ma ) or stop_loss_condition == true

//short_condition = compression_condition and rsi_value < rsi_ma
//exit_condition2 = rsi_value < 30 and previous_rsi_ma < rsi_ma


all_in_qty(proportion) =>
    equity = strategy.equity
    allocated_funds = equity * proportion
    position_size = allocated_funds / close
    position_size

// Strategy Entries
if long_condition
    strategy.entry("Long", strategy.long , qty = all_in_qty(1))

if exit_condition1
    strategy.close("Long")


